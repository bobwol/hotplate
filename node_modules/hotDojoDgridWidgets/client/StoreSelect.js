define([
   "dojo/_base/declare",
   "dojo/when",
   "dojo/topic",
   "dojo/on",
   "dojo/_base/lang",
   "dojo/dom-construct",
   "dojo/dom-style",
   "dojo/dom-attr",
   "dojo/aspect",

   "dijit/_WidgetBase",
   "dijit/Dialog",
   "dijit/_OnDijitClickMixin",
   "dijit/focus",
   "dijit/form/Button",
   "dijit/layout/BorderContainer",
   "dijit/_Container",
   "dijit/layout/_ContentPaneResizeMixin",

   'dgrid/List',
   'dgrid/OnDemandList',
   "dgrid/Selection",
   "dgrid/Keyboard",
   "dgrid/util/mouse",
   "dgrid/extensions/DijitRegistry",
   'put-selector/put',

   "hotplate/hotDojoSubmit/defaultSubmit",
   "hotplate/hotDojoWidgets/BusyButton",
   "hotplate/hotDojoWidgets/ConfirmDialog",

   ], function(
     declare
     , when
     , topic
     , on
     , lang
     , domConstruct
     , domStyle
     , domAttr
     , aspect

     , _WidgetBase
     , Dialog
     , _OnDijitClickMixin
     , focusUtil
     , Button
     , BorderContainer
     , _Container
     , _ContentPaneResizeMixin

     , List
     , OnDemandList
     , Selection
     , Keyboard
     , mouse
     , DijitRegistry
     , put

     , ds
     , BusyButton
     , ConfirmDialog

 ){


    return declare( [ _WidgetBase, _Container, _ContentPaneResizeMixin ] , {

      // Store
      storeName: '',
      store: null,
      renderRow: function( o ){ return "renderRow not defined"; } ,

      listWidget: null,

      constructor: function( params ){
        // this.store = stores( params.storeName, params.storeFields );
      },

      // Proxy method for listwidget.row()
      row: function( p ){
        return this.listWidget.row( p );
      },

      postCreate: function(){

        var self = S = this;
        this.inherited(arguments); 

        put( this.domNode, '.dgrid-select' );

        var ListConstructor = declare( [ OnDemandList, Selection, Keyboard, DijitRegistry ], {
          renderRow: self.renderRow,
        } );

        // Make a listWidget
        this.listWidget = new ListConstructor( { store: this.store } );
        this.addChild( this.listWidget );
        // domStyle.set( this.listWidget.domNode, { height: '100%', width: '100%' } );

        // this.domNode = put( 'div' );
        //put( this.domNode, this.listWidget.domNode );


      },

      resize: function(){
        this.listWidget.resize();

        this.inherited(arguments); 
      },

      destroy: function(){
        this.listWidget.destroy();

        this.inherited(arguments); 
      },

      startup: function(){
        this.inherited(arguments); 
      },

    });
 

});

