var dummy
  , hotplate = require('hotplate')
  , path = require('path')
;


exports.hotHooks = hooks = {}

hooks.init = function( done ){

  done( null );
}


hooks.pageElements = function( done ){
  done( null, { moduleName: 'hotDojoAuth2', result:{
    csses: [ 'auth.css' ],
    vars:  [ { name: 'multiHomeURL', value: hotplate.get('hotCoreAuth').multiHomeURL }, ],
  } } );
}


hooks.run = function( done ){

   // Pages
  app.get('/pages/welcome' , pageWelcome);
  app.get('/pages/pick' , pagePick );


  done( null );
}

hooks.clientPaths = function( done ){
  done( null, { moduleName: 'hotDojoAuth2', result: [ path.join(__dirname, '../client') ] } );
}


var pageWelcome = function(req, res, next){

  req.session =  {};

  var hotCorePage = hotplate.getModule('hotCorePage');
  var logger = hotplate.getModule('hotCoreServerLogger');

  // CASE #1: The user IS NOT logged in. Show the straight login form,
  //          after setting the right variables
  if(! req.session.loggedIn){

    var extraJses = (new hotCorePage.Jses).add('hotDojoAuth2', 'mainWelcome.js');
    var extraCsses = (new hotCorePage.Csses).add('hotDojoAuth2', 'welcome.css');
    var extraVars = new hotCorePage.Vars();

    /*
    extraVars.add( 'hotDojoAuth', 'loggedIn', false );
    extraVars.add( 'hotDojoAuth', 'login',  typeof( req.session.login )  === 'undefined' ? '' : req.session.login );
    extraVars.add( 'hotDojoAuth', 'userId', typeof( req.session.userId ) === 'undefined' ? '' : req.session.userId );
    */

    hotCorePage.processPageTemplate(
      {
        jses:extraJses,
        csses:extraCsses,
        vars:extraVars,
        body: '<body class="claro"> <div data-dojo-type="hotplate/hotDojoAuth2/Welcome" id="welcome"></div>  </body>'
      },
      req,
      'hotDojoAuth/Welcome',
      function( err, result ){
        if( err ){
          hotplate.get('errorPage')(req, res, next);
        } else {
          res.send( result );
          logger.log( { message: "Welcome page served" } );
        }
      }
    );
    return;
  }

  // CASE #2: The user IS logged in. Redirect to pick()
  if( req.session.userId ){
    res.redirect('/pages/pick');
  }

};

var pagePick = function(req, res, next){

  var hotCorePage = hotplate.getModule('hotCorePage');
  var logger = hotplate.getModule('hotCoreServerLogger');

  if( req.session.loggedIn){

    var extraJses = (new hotCorePage.Jses).add('hotDojoAuth2', 'mainPick.js');
    var extraCsses = (new hotCorePage.Csses).add('hotDojoAuth2', 'pick.css');
    var extraVars = (new hotCorePage.Vars()).add('hotDojoAuth2', 'userId', req.session.userId );

    hotCorePage.processPageTemplate(
      {
        jses:extraJses,
        csses:extraCsses,
        vars:extraVars,
        body: '<body class="claro"> <div data-dojo-type="hotplate/hotDojoAuth2/Pick" id="pick"></div>  </body>'
      },
      req,
      'hotDojoAuth/Pick',
      function( err, result ){
        if( err ){
          hotplate.get('errorPage')(req, res, next);
        } else {
          res.send( result );
          logger.log( { message: "Pick page served" } );
        }
      }
    );
    return;
  } else {

    var redirectURLs = hotplate.get('hotCoreAuth/redirectURLs/fail');
    var redirectURL = redirectURLs[ 'signin' ] || '/' ;
    res.redirect(redirectURL);

  }

};


