"use strict";

/*!
 * Module dependencies.
 */

var dummy

, hotplate = require( 'hotplate' )
, path = require( 'path' )
, Schema = require( 'simpleschema' )
;


/*
  logLevel : number
  errorName: string
  message  : string
  errors   : Array => string
  data     : object => string
  system   : boolean
  loggedOn : date
*/

exports.log = function( e, done ){

  e.logLevel = convInt( e.logLevel );
  e.errorName = convString( e.errorName );
  e.message = convString( e.message );
  e.errors = convArray( e.errors );
  e.system = convBool( e.system );
  e.data = convObject( e.data );
  e.loggedOn = convDate( e.loggedOn );

  hotplate.hotEvents.emit( 'log', e, function( err ) {
    console.log( "Logged:");
    console.log( e );
  });


  // Helper functions, just make sure values are always sane

  function convInt( i ){
    return isNaN( parseInt( i ) ) ? 0 : i;
  }

  function convString( str ){
    if( typeof( str ) === 'undefined' ) str = '';
    str = str + '';
    return typeof( str ) === 'string' ? str : '';
  }

  function convObject( o ){

    // Anything but clean objects are not welcome
    if( typeof( o ) !== 'object' || o === null ) o = {};
    try {
      o = JSON.stringify( o );
    } catch( e ){
      o = '{}';
    }
    return o;
  }

  function convDate( d ) {
    return ( d instanceof( Date ) ) ? d : new Date();
  }

  function convBool( b ) {
    return !! b;
  }

  function convArray( a ) {
    // Anything but clean objects are not welcome
    if( ! Array.isArray( a ) ) a = [];
    try {
      a = JSON.stringify( a );
    } catch( e ){
      a = '[]';
    }
    return a;
  }



}

