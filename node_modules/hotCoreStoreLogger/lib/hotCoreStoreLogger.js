"use strict";

var dummy
  , hotplate = require('hotplate')

  , declare = require('simpledeclare')
  , JsonRestStore = require('jsonreststores')
  , SimpleSchema = require('simpleschema')
;


// Sets the right mixins for Store and Schema
//Store = declare( [ JsonRestStore, MongoDriverMixin ] );
//Schema = declare( [ SimpleSchema, MongoSchemaMixin ] );

hotplate.hotEvents.on( 'log', 'hotCoreStoreLogger', function( entry, done ){

  console.log("***************************** hotStoreLogger is logging:");
  console.log( entry );

  //console.log( new Error().strack );
//  getLogStore( function( err, LogStore ) {
//    LogStore.Post( entry, { killComet: true } );
    done( null );
//  });

});



// FIXME: Make it return the actual store
hotplate.hotEvents.on( 'stores', 'hotCoreStoreLogger', hotplate.cachable( function( done ){

  // TODO:
  // Get JsonRestStore's store constructor,
  // create a DB class using it, return the store

  /* 
  LogStore = declare( Store,  {
    storeName: 'logs',
    db: db,
    schema: s,
    paramIds: [ 'logId' ],
  });


  logFields = function( done ){
  done( null, {
    logLevel:      { type: 'number', default: 3 },
    errorName:     { type: 'string', default: '' },
    message:       { type: 'string', default: '' },
    errors:        { type: 'serialize', default: '' },
    system:        { type: 'number', default: 0 },
    data:          { type: 'serialize', default: '' },
    loggedOn:      { type: 'date',   default: new Date() },
  } );
}

  */
  // Temporary dummy store
  var LogStore = function() {};
  LogStore.Post = function() {};

  return done( null, [ ] );

  done( null, { LogStore: LogStore } );

}))

