define([
  "dojo/_base/declare",

  "dijit/layout/StackContainer",
  "dijit/layout/ContentPane",
  "dijit/form/Form",
  "dijit/_WidgetBase",
  "dijit/_TemplatedMixin",
  "dijit/_WidgetsInTemplateMixin",
  "dijit/form/Button",
  "dijit/form/ValidationTextBox",
  "dijit/registry",
  "dijit/Tooltip",
  "dijit/Dialog",

  "hotplate/hotDojoSubmit/defaultSubmit",
  "hotplate/hotDojoStores/stores",
  "dojo/text!hotplate/hotDojoAuth/templates/NewWorkspace.html",

  "hotplate/hotDojoAuth/ValidationWorkspace",

  "hotplate/hotDojoWidgets/_TemplatedHooksMixin",

   ], function(
     declare

     , StackContainer
     , ContentPane
     , Form
     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin
     , Button
     , ValidationTextBox
     , registry
     , Tooltip
     , Dialog

     , ds
     , stores
     , templateString

     , ValidationWorkspace

     , _TemplatedHooksMixin

 ){
    // Create the "login" pane, based on a normal ContentPane
    return declare( [_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, _TemplatedHooksMixin ], {


      widgetsInTemplate: true,

      templateString: templateString,
      
      postCreate: function(){
        var self = this;

        this.inherited( arguments );

        this.formWidget.onSubmit = ds.defaultSubmit(this.formWidget, this.buttonWidget, function(){
          var data = self.formWidget.getValues();

          stores('Workspaces', {} ).noCache.put(data).then(
            ds.UIMsg( self.buttonWidget, self.alertBarWidget , "Workspace created!"),
            ds.UIErrorMsg( self.formWidget, self.buttonWidget, self.alertBarWidget, true )
          ).then(
            function(res){
              window.location = vars.hotCoreMultiHome.multiHomeURL.replace( ':workspaceId', res.id );
            }
          );

 
        });


      }, // postCreate


   });

});

