define([
   "dojo/_base/declare",

   "dijit/_WidgetBase",
   "dijit/_TemplatedMixin",
   "dijit/_WidgetsInTemplateMixin",
   "dijit/Destroyable",

   "dijit/layout/TabContainer",
   "dijit/layout/ContentPane",
   'dijit/_Container',
   'dijit/layout/_ContentPaneResizeMixin',

   "hotplate/hotDojoAuth/panels/SignInRecoverRegister",
   "hotplate/hotDojoWidgets/_OverlayMixin",
   "hotplate/hotDojoWidgets/EditingWidget",


   ], function(
     declare

     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin
     , Destroyable

     , TabContainer
     , ContentPane
     , _Container
     , _ContentPaneResizeMixin

     , SignInRecoverRegister
     , _OverlayMixin
     , EditableList

 ){

    // Create the "login" pane, based on a normal ContentPane
    return declare( [_WidgetBase, _Container, _ContentPaneResizeMixin, Destroyable, _OverlayMixin, _TemplatedMixin, _WidgetsInTemplateMixin ], {

      widgetsInTemplate: true,

      templateString: '' +
        '<div>\n' +

        '  <div data-dojo-type="dijit/layout/TabContainer">\n'+
        '    \n'+
        '    <div data-dojo-type="dijit/layout/ContentPane" title="Sign in">\n'+
        '      <p>Acca ta loggin</p>\n'+
        '      <div data-dojo-type="hotplate/hotDojoAuth/panels/SignInRecoverRegister" data-dojo-props="action:\'signin\'"></div>\n'+
        '    </div>\n'+
        '    \n'+
        '    <div data-dojo-type="dijit/layout/ContentPane" title="Recover">\n'+
        '      <p>Acca tarcurd </p>\n'+
        '      <div data-dojo-type="hotplate/hotDojoAuth/panels/SignInRecoverRegister" data-dojo-props="action:\'recover\'"></div>\n'+
        '    </div>\n'+
        '    \n'+
        '    <div data-dojo-type="dijit/layout/ContentPane" title="Register">\n'+
        '      <p>Acca ti sign</p>\n'+
        '      <div data-dojo-type="hotplate/hotDojoAuth/panels/SignInRecoverRegister" data-dojo-props="action:\'register\'"></div>\n'+
        '    </div>\n'+
        '    \n'+
        '    \n'+
        '    \n'+
        '  </div>\n'+
        '</div>\n'+
        '',


        postCreate:function(){
          var that = this;

          this.inherited(arguments);

          var self = this;

        },

        startup: function(){
          this.inherited(arguments);

          var self = this;
        },

   });

});



