var dummy
  , hotplate = require('hotplate')
  , path = require('path')
;


exports.hotHooks = hooks = {}

hooks.init = function( done ){

  done( null );
}


hooks.pageElements = function( done ){
  done( null, { moduleName: 'hotDojoAuth', result:{
    csses: [ 'auth.css' ],
    // #1 
  } } );
}


hooks.run = function( done ){

   // Pages
  app.get('/pages/welcome' , pageWelcome);
  app.get('/pages/pick' , pagePick );

  done( null );
}

hooks.clientPaths = function( done ){
  done( null, { moduleName: 'hotDojoAuth', result: [ path.join(__dirname, '../client') ] } );
}

var pageWelcome = function(req, res, next){

  req.session =  {};

  var hotCorePage = hotplate.getModule('hotCorePage');
  var logger = hotplate.getModule('hotCoreServerLogger');

  // CASE #1: The user IS NOT logged in. Show the straight login form,
  //          after setting the right variables
  if(! req.session.loggedIn){

    var extraJses = (new hotCorePage.Jses).add('hotDojoAuth', 'mainWelcome.js');
    var extraCsses = (new hotCorePage.Csses).add('hotDojoAuth', 'welcome.css');
    var extraVars = new hotCorePage.Vars();

    //extraVars.add( 'hotDojoAuth', 'successURLs', hotplate.get('hotCoreAuth/redirectURLs/success') );

    hotCorePage.processPageTemplate(
      {
        jses: extraJses,
        csses: extraCsses,
        vars: extraVars,
        body: '<body class="claro"><div data-dojo-type="hotplate/hotDojoAuth/Welcome" id="welcome"></div>  </body>'
      },
      req,
      'hotDojoAuth/Welcome',
      function( err, result ){
        if( err ){
          next( err );
          // hotplate.get('errorPage')(req, res, next);
        } else {
          res.send( result );
          logger.log( { message: "Welcome page served" } );
        }
      }
    );
    return;
  }

  // CASE #2: The user IS logged in. Redirect to pick()
  if( req.session.userId ){
    res.redirect('/pages/pick');
  }

};

var pagePick = function(req, res, next){

  var hotCorePage = hotplate.getModule('hotCorePage');
  var logger = hotplate.getModule('hotCoreServerLogger');
  var registry = hotplate.getModule('hotCoreStoreRegistry');

  if( req.session.loggedIn){

    registry.storeRegistry.userWorkspaces.Store.GetQuery( { filters: { userId: req.session.userId  }  }, function( err, records ){
      if( err ){
        next( err );
      }  else {
        
        // To escape picking, there needs to be exactly 1 workspace AND escapePick needs to be true
        if( records.length !== 1 || ! hotplate.get('hotCoreAuth').escapePick ){
          returnThePage();

        // OK, escape successful! Get the application URL and jump there
        } else {
          var applicationURL = hotplate.get('hotCoreAuth').multiHomeURL;
          applicationURL = applicationURL.replace( ':workspaceId', records[0].workspaceId );
          res.redirect( applicationURL );
        } 
      }
    });

   
    function returnThePage(){
      var extraJses = (new hotCorePage.Jses).add('hotDojoAuth', 'mainPick.js');
      var extraCsses = (new hotCorePage.Csses).add('hotDojoAuth', 'pick.css');
      var extraVars = (new hotCorePage.Vars()).add('hotDojoAuth', 'userId', req.session.userId );

      hotCorePage.processPageTemplate(
        {
          jses: extraJses,
          csses: extraCsses,
          vars: extraVars,
          body: '<body class="claro"><div data-dojo-type="hotplate/hotDojoAuth/Pick" id="pick"></div>  </body>'
        },
        req,
        'hotDojoAuth/Pick',
        function( err, result ){
          if( err ){
            next( err );
            // hotplate.get('errorPage')(req, res, next);
          } else {
            res.send( result );
            logger.log( { message: "Pick page served" } );
          }
        }
      );
      return;
    }

  } else {

    var redirectURLs = hotplate.get('hotCoreAuth/redirectURLs/fail');
    var redirectURL = redirectURLs[ 'signin' ] || '/' ;
    res.redirect(redirectURL);

  }

};


// #1
// vars:  [ { name: 'multiHomeURL', value: hotplate.get('hotCoreAuth').multiHomeURL }, ],
