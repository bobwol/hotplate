
var dummy
  , path = require( 'path' )
  , hotplate = require( 'hotplate' )
;

var hooks = exports.hotHooks = {} ;


hooks.init = function( done ){

  done( null );
}


hooks.run = function( done ){
  hotplate.app.get( '/ws',                      function(req, res, next){ res.redirect('/pages/login'); } );
  hotplate.app.get( '/ws/:workspaceIdPages',    mainApp);

  // Example routes defined, containing :tokenCall and :workspaceId
  // app.get(      '/api/1/:tokenCall/users', testApi1 );
  // app.get( '/call/:workspaceId/users', testApi1 );


  done( null );
} 

hooks.clientPaths = function( done ){
  done( null, { moduleName: 'hotDojoAppContainer', result:[ path.join( __dirname, '../client' ) ] } );
}


function mainApp( req, res ){

  var hotCorePage = hotplate.getModule('hotCorePage');
  var logger = hotplate.getModule('hotCoreServerLogger');

  var extraJses = (new hotCorePage.Jses).add( 'hotDojoAppContainer', 'mainContainer.js' );
  var extraCsses = (new hotCorePage.Csses).add( 'hotDojoAppContainer', 'mainContainer.css' );
  var extraVars = new hotCorePage.Vars;
  extraVars.add( 'hotDojoAppContainer', 'loggedIn', true );
  extraVars.add( 'hotDojoAppContainer', 'login', req.session.login );
  extraVars.add( 'hotDojoAppContainer', 'userId', req.application.user._id );
  extraVars.add( 'hotDojoAppContainer', 'workspaceName', req.application.workspace.name );
  extraVars.add( 'hotDojoAppContainer', 'workspaceId', req.application.workspace._id );

  hotCorePage.processPageTemplate(
    {
      jses: extraJses,
      vars: extraVars,
      csses:extraCsses,
      body: '<body class="claro"><div id="appContainer"></div></body>',
    },
    req, 
    'hotDojoAppContainer/container',
    function( err, result ){ 
      if( err ){
        hotplate.get('errorPage')(req, res);
      } else {
        res.send( result );
        logger.log( { message: "App container page served" } );
      }
    }
  );
  return;
}

