
var util = require('util')

  , hotplate = require('hotplate')
  , ObjectId = require('mongowrapper').ObjectId
  , declare = require('simpledeclare')
  , Store = require('jsonreststores')
  , MongoDriverMixin = require('jsonreststores/MongoDriverMixin.js')
  , app = hotplate.app
  , db = hotplate.get('db')

  , Schema = require('simpleschema')
  , MongoSchemaMixin = require('simpleschema/MongoSchemaMixin.js')
;


// Sets the right mixins for Store and Schema
Schema = declare.mixin( Schema, MongoSchemaMixin );
Store = declare.mixin( Store, MongoDriverMixin );

// Module's variables
// var logFields = {};
var LogStore = null;

var hooks = exports.hotHooks = {}

hooks.initLoggers = function( done, logFields ){

  var s = new Schema( logFields );

  // MAYBE: Manipulate schema here if needed: add things so that they are marked as sortable etc.

  LogStore = declare( Store,  {
    storeName: 'logs',
    db: db,
    schema: s,
    paramIds: [ 'logId' ],
    handleGetQuery: true,
  });

  // TODO: Uncomment this when simpleschema-mongo is completed
  // s.buldIndexes(); 

  done( null ); 
}

hooks.run = function( done ){

  LogStore.onlineAll( app, '/call/:workspaceId/logs', ':logId' );
  done( null );
}

hooks.log = function( done, entry){

  //console.log("hotMongoLogger is logging:");
  //console.log( entry );

  // Simply insert
  var logs = db.collection('logs').insert( entry, function() {}  );

  done( null );

}

hooks.stores = function( done ){
  done( null, {
    logs: { target: '/call/:workspaceId/logs/', idProperty: '_id', sortParam: 'sortBy', },
  } );
}

