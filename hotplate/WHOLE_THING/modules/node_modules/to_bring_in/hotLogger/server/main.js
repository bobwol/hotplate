
/* TODO:

/*!
 * Module dependencies.
 */

var hotplate = require('hotplate')
  , LogFields = require('./LogFields');
;

var logFields = exports.logFields = new LogFields();

exports.init = function(){

  
  // Set the default log fields, which will be available no matter what
  logFields.add('logLevel',  { type: Number } );
  logFields.add('errorName', { type: String, index: true } );
  logFields.add('message',   { type: String, index: true } );
  logFields.add('data',      { type: String } );
  logFields.add('loggedOn',  { type: Date, index: true } );


  hotplate.invokeAll('logFields').forEach(function(fieldList){
    console.log( "Fields: %j", fieldList  );
  });


}


exports.log = function(entry){

  // Allow modules to manipulate the blog entry
  hotplate.invokeAll('aboutToLog', entry);

  // Allow modules to actually log this. Note that this module
  // doesn't actually do any logging itself
  hotplate.invokeAll('log', entry);
}

exports.hooks = {};

exports.hooks.aboutToLog = function(entry){

  console.log("aboutToLog called from within the logger.");

  entry.logLevel   = entry.logLevel  ? entry.logLevel  : 0;
  entry.errorName  = entry.errorName ? entry.errorName : '';
  entry.message    = entry.message   ? entry.message   : '';
  entry.data       = entry.data      ? entry.data      : {};

  entry.loggedOn = new Date();

}

exports.hooks.logFields = function(){

  return {};

  return {
    loglevel:  { type: Number },
    errorName: { type: String, index: true },
    message:   { type: String, index: true },
    data:      { type: String, index: false },
    loggedOn:  { type: Date, index: true },
  };


}
