
var util = require('util')
  , fs = require('fs')
  , hotplate = require('hotplate')
  , mongoose = require('mongoose')
  , app = hotplate.app
;


exports.init = function(){

  // ********************************
  // FIXME: this will be generated
  // automatically by the module depending on logged
  // fields
  // ********************************
  var Log = new mongoose.Schema({
    workspaceId    : { type: String, index: true },
    workspaceName  : { type: String, index: true },
    userId         : { type: String, index: true },
    login          : { type: String, index: true },
    token          : { type: String, index: true },
    logLevel       : { type: Number, enum:[1,5] },
    errorName      : { type: String, index: true },
    message        : { type: String, index: true },
    reqInfo        : { type: String },
    data           : { type: String },
    loggedOn       : { type: Date, index: true },
  });

exports.Log = mongoose.model('Log', Log);

}


exports.hooks = {}

exports.hooks.log = function(hook, req, entry){

  console.log("Mongologged called: %j ", entry );


  log = new exports.Log();
  for(var k in entry){
    if( entry.hasOwnProperty(k) ){
      log[k] = entry[k];
    }
  }

  // req.application.login is always set if the user has logged in

  // Sorts out log.loggedOn
  log.save();

  

}



