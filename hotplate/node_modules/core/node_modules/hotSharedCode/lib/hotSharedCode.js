/*!
 * Module dependencies.
 */

var util = require('util')
  , hotplate = require('hotplate')
  , path = require('path')
;

exports.sharedFunctions = sharedFunctions = {};

exports.hotHooks = hooks = {}


/* hooks._sharedFunctions = function(){

  return { one: function(){console.log('one'); } };

}*/

hooks.init = function( done ){

  var app = hotplate.app;

  // Get all shared functions from all modules, and populating the
  // variable `sharedFunctions`
  hotplate.invokeAll('sharedFunctions', function(err, results){
    results.forEach(function(entry){
      var moduleName = entry.moduleName;

      sharedFunctions[moduleName] = entry.result;
    });
    done( null );
  });
}
hooks.init.invokes = [ 'sharedFunctions' ];

hooks.run = function( done ){

  // Defines the route [staticUrlPath]/hotSharedCode/shares.js which will
  // return the javascript which will define an object variable called
  // sharedFunctions containing all the defined validation functions
  // (divided by module)
  var sharedFunctionsLocation = path.join( hotplate.get('staticUrlPath'), 'hotSharedCode', 'shared.js');

  app.get( sharedFunctionsLocation, function(req, res ){
    var result = '';

    // Define the variable as an associative array
    // WATCH OUT: needs to end with "\n " so that comma-clipping works even
    // if there is nothing in the rendered object
    result += "var sharedFunctions = { \n ";
    
    // Cycle through every module defined...
    for( var moduleName in sharedFunctions ){

      // For each defined module, add an associative adday of functions
      var functions = sharedFunctions[moduleName];
      // WATCH OUT: needs to end with "\n " so that comma-clipping works even
      // if there is nothing in the rendered object
      result += moduleName + ": {\n ";
      for(functionName in sharedFunctions[moduleName] ){
        if( typeof( sharedFunctions[moduleName][functionName] ) === 'function' ){
          result += functionName + ": " + sharedFunctions[moduleName][functionName] + ",\n";
        }
      }
      // Clip the last comma and close the variable
      result = result.substring(0, result.length -2 ) + "\n";
      result += "},\n";
    }

    // Clip the last comma and close the main associative array
    result = result.substring(0, result.length -2 ) + "\n";
    result += "}\n";

    res.send(result);
  });

  done( null );

}


// Make the file "shared.js" visible and shared.
hooks.pageElements = function( done ){

  done( null, { moduleName: 'hotSharedCode', result: {
    jses: [ 'shared.js' ]
  } });
}

