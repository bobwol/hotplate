
var hotplate = require('/home/merc/Synced/Development/Bookings/app/hotplate/hotplate.js')
  , path = require('path')
;


app = hotplate.app;

exports.hotHooks = hooks = {}



hooks.init = function(){

  console.log("Hook for 'testing' called!");
  logger = hotplate.getModule('hotLogger');
  var e = hotplate.getModule('hotError').errors;
  var hotPage = hotplate.getModule('hotPage');

  // Either like this... (client paths)
  hotplate.getModule('hotClientFiles').add('hotTestingModule', path.join(__dirname, 'client') );

  // Either like this... (elements in page)
  hotplate.getModule('hotPage').jses.add('hotTestingModule', 'file.js' );

  app.get('/TESTING' , function(req, res, next){
    extraCsses = (new hotPage.Csses).add('hotTestingModule', 'one.css');

    result = hotPage.processPageTemplate( { csses:extraCsses, body: "PAGE CONTENTS" } );

    res.send( result );
    logger.log( { message: "Something has happened here and it was my fault" } );

  });

  app.get('/TESTINGERR' , function(req, res, next){
    extraCsses = (new hotPage.Csses).add('hotTestingModule', 'one.css');

    result = hotPage.processPageTemplate( { csses:extraCsses, body: "PAGE CONTENTS" } );

    next( new e.ValidationError('Validation did not work' , {} ) );
  });
}
hooks.init.invokes = [ 'stores' ];



// ...or like this (elements in page)
hooks.pageElements = function(){
  return {
    jses:  [ 'file.js', 'two/two.js' ],
    csses: [ 'one.css', 'two.css' ],
    vars:  [ { name: 'var1', value: 'first variable' }, 
             { name: 'var2', value: [ 1, 2, 3 ] }, 
             { name: 'var3', value: [ function(){ console.log('ah')} , 2, 3 ] } 
           ],
  }
}

hooks.stores = function(){
  return {
    one: { target: '/some/path/one', idProperty: '_id', sortParam: 'sortBy', },
    two: { target: '/some/path/two', idProperty: '_id', sortParam: 'sortBy', },
  }

}

// ...or like this (client paths)
hooks.clientPaths = function(){
  return [ path.join(__dirname, 'client') ];
}



