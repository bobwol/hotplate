
var dummy
  , hotplate = require('hotplate')
  , logger = hotplate.getModule('hotServerLogger')
  , hotPage = hotplate.getModule('hotPage')
;

var hooks = exports.hooks = {} ;

exports.run = function(){
  hotplate.app.get('/pages/ws',                      function(req, res, next){ res.redirect('/pages/login'); } );
  hotplate.app.get('/pages/ws/:workspaceIdPages',    mainApp);


  // Example routes defined, containing :tokenCall and :workspaceIdCall
  // app.get(      '/api/1/:tokenCall/users', testApi1 );
  // app.get( '/call/:workspaceIdCall/users', testApi1 );


} 

function mainApp(req, res ){

  // User is not logged in (?!?): redirect to the login page
  if(! req.session.loggedIn ){
   res.redirect('/pages/login');
   return;
  }

  var extraJses = (new hotPage.Jses).add('hotDojoAppContainer', 'main.js');
  var extraCsses = (new hotPage.Csses).add('hotDojoAppContainer', 'main.css');
  var extraVars = new hotPage.Vars;
  extraVars.add( 'hotDojoAppContainer', 'login', req.session.login );
  extraVars.add( 'hotDojoAppContainer', 'workspaceId', req.application.workspaceId );
  extraVars.add( 'hotDojoAppContainer', 'workspaceName', req.application.workspaceName );

  result = hotPage.processPageTemplate( { jses: extraJses, vars: extraVars, csses:extraCsses, body: '<body class="claro"><div id="appMainScreen"></div></body>' } );
  res.send( result );
  logger.log( { message: "App main screen page served" } );
  return;

  /* Original jade file had:
  body.claro
  script
    loginValue="#{login}";
    workspaceIdValue="#{workspaceId}";
    workspaceNameValue="#{workspaceName}";
  #network-alert-bar
  #app-alert-bar
  #loadingOverlay.pageOverlay 
    .loadingMessage Loading...
  #appMainScreen
  */



}


