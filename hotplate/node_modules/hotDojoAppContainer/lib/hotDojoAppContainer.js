
var dummy
  , path = require( 'path' )
  , hotplate = require( 'hotplate' )
  , logger = hotplate.getModule( 'hotServerLogger' )
  , hotPage = hotplate.getModule( 'hotPage' )
  , sendResponse = hotplate.getModule('hotProtocol').sendResponse

;

var hooks = exports.hotHooks = {} ;

hooks.init = function( done ){

  hotplate.set('errorPage', function( req, res, next ){
    res.send("ERROR!")
  });

  done( null );
}


hooks.run = function( done ){
  hotplate.app.get( '/ws',                      function(req, res, next){ res.redirect('/pages/login'); } );
  hotplate.app.get( '/ws/:workspaceIdPages',    mainApp);

  // Example routes defined, containing :tokenCall and :workspaceIdCall
  // app.get(      '/api/1/:tokenCall/users', testApi1 );
  // app.get( '/call/:workspaceIdCall/users', testApi1 );

  hotplate.app.get('/api/1/:workspaceIdCall/users', function(req, res, next ){
    sendResponse( res, { data: [ { result: 'OK!' } ]  } );
  });

  done( null );
} 

hooks.clientPaths = function( done ){
  done( null, { moduleName: 'hotDojoAppContainer', result:[ path.join( __dirname, '../client' ) ] } );
}

hooks.stores = function( done ){
  done( null, {
    users: { target: '/api/1/:workspaceIdCall/users',      idProperty: '_id', sortParam: 'sortBy', },
  });
}


hooks.permissions = function( done ){
  done( null, [
    'access admin functions',
    'be god',
  ]);
}


function mainApp( req, res ){

  var extraJses = (new hotPage.Jses).add( 'hotDojoAppContainer', 'main.js' );
  var extraCsses = (new hotPage.Csses).add( 'hotDojoAppContainer', 'main.css' );
  var extraVars = new hotPage.Vars;
  extraVars.add( 'hotDojoAppContainer', 'login', req.session.login );
  extraVars.add( 'hotDojoAppContainer', 'workspaceId', req.application.workspaceId );
  extraVars.add( 'hotDojoAppContainer', 'workspaceName', req.application.workspaceName );

  result = hotPage.processPageTemplate( {
    jses: extraJses,
    vars: extraVars,
    csses:extraCsses,
    body: '<body class="claro"><div id="appMainScreen"></div></body>'
  } );
  res.send( result );

  logger.log( { message: "App main screen page served" } );
  return;
}


