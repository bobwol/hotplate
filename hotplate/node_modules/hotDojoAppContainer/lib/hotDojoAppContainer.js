
var dummy
  , path = require( 'path' )
  , hotplate = require( 'hotplate' )
;

var hooks = exports.hotHooks = {} ;


hooks.init = function( done ){

  hotplate.set('errorPage', function( req, res, next ){
    res.send("ERROR!")
  });

  done( null );
}


hooks.run = function( done ){
  var sendResponse = hotplate.getModule('hotProtocol').sendResponse;

  hotplate.app.get( '/ws',                      function(req, res, next){ res.redirect('/pages/login'); } );
  hotplate.app.get( '/ws/:workspaceIdPages',    mainApp);

  // Example routes defined, containing :tokenCall and :workspaceIdCall
  // app.get(      '/api/1/:tokenCall/users', testApi1 );
  // app.get( '/call/:workspaceIdCall/users', testApi1 );


  done( null );
} 

hooks.clientPaths = function( done ){
  done( null, { moduleName: 'hotDojoAppContainer', result:[ path.join( __dirname, '../client' ) ] } );
}


function mainApp( req, res ){

  var hotPage = hotplate.getModule('hotPage');

  var extraJses = (new hotPage.Jses).add( 'hotDojoAppContainer', 'container.js' );
  var extraCsses = (new hotPage.Csses).add( 'hotDojoAppContainer', 'container.css' );
  var extraVars = new hotPage.Vars;
  extraVars.add( 'hotDojoAppContainer', 'login', req.session.login );
  extraVars.add( 'hotDojoAppContainer', 'workspaceId', req.application.workspaceId );
  extraVars.add( 'hotDojoAppContainer', 'workspaceName', req.application.workspaceName );

  hotPage.processPageTemplate(
    {
      jses: extraJses,
      vars: extraVars,
      csses:extraCsses,
      body: '<body class="claro"><div id="appContainer"></div></body>',
    },
    req, 
    'hotDojoAppContainer/container',
    function( result ){ 
      res.send( result );
      logger.log( { message: "App container page served" } );
    }
  );
  return;
}

