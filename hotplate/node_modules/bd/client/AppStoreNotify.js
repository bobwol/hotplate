
define([
     "dojo/_base/declare",
     "dojo/topic",
     "dojo/aspect",
     "hotplate/hotDojoStores/stores",
     "hotplate/hotMessages/messages",

     "dojo/domReady!",
   ], function(
   declare
   , topic
   , aspect
   , stores
   , messages
 ){


  topic.subscribe('hotplate/hotDojoStores/newStore', function( storeName, store ){

    // Before anything else, create _tabId
    aspect.before(store, 'put', function(object, options){
      object._tabId = messages.tabId;
      return [ object, options ];
    });

    // But before storing it in the local cache, delete it
    aspect.before(store.memCache, 'put', function(object, options){
      delete object._tabId;
      return [ object, options ];
    });

    // After making a change to the cache, well, the main store has definitely
    // worked, so it's time for an app-wide message
    aspect.after(store.memCache, 'put', function(object, options){
      console.log("PUBLISHING A STORE CHANGE");
      console.log(storeName);
      console.log(object._id);
      topic.publish('storeChange', storeName, object._id );
    }, true );
  })

  return {};

});


