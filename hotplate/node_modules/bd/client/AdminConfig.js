
define([
  "dojo/_base/declare",
  "dojo/_base/json",
  "dojo/store/Observable",
  "dojo/topic",
  "dojo/on",
  "dojo/dom",
  "dojo/dom-class",
  "dojo/dom-construct",
  "dojo/when",
  "dojo/store/Memory",

  "dijit/_WidgetBase",
  "dijit/_TemplatedMixin",
  "dijit/_WidgetsInTemplateMixin",
  "dijit/form/Form",
  'dijit/layout/TabContainer',
  'dijit/layout/ContentPane',
  "dijit/Destroyable",

  'dgrid/OnDemandGrid',
  'dgrid/OnDemandList',
  'dgrid/Keyboard',
  'dgrid/Selection',
  'dgrid/_StoreMixin',

  "hotplate/hotDojoSubmit/defaultSubmit",
  "hotplate/hotDojoLogger/logger",
  "hotplate/hotDojoStores/stores",

  "hotplate/hotDojoWidgets/AlertBar",
  "hotplate/hotDojoWidgets/_OverlayMixin",
  "hotplate/hotDojoWidgets/BusyButton",
  "hotplate/hotDojoWidgets/EditingWidget",

  "hotplate/bd/globals",

   ], function(
     declare
     , json
     , Observable
     , topic
     , on
     , dom
     , domClass
     , domConstruct
     , when
     , Memory

     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin
     , Form
     , TabContainer
     , ContentPane
     , Destroyable

     , OnDemandGrid
     , OnDemandList
     , Keyboard
     , Selection
     , _StoreMixin

     , ds
     , Logger
     , stores

     , AlertBar
     , _OverlayMixin
     , BusyButton
     , EditingWidget

     , globals

 ){


  var AdminTabContainer = declare('hotplate/bd/AdminTabContainer', [ ContentPane, _TemplatedMixin, _WidgetsInTemplateMixin ], {

    widgetsInTemplate: true,

    templateString: '' +
      '<div class="adminSection" >' +
      '  <div data-dojo-attach-point="widget" data-dojo-type="dijit/layout/ContentPane">' +
      '    <div data-dojo-type="dijit/layout/TabContainer" data-dojo-props="tabPosition: \'top\'" data-dojo-attach-point="settingsTab">' +
      '      <div data-dojo-type="hotplate/bd/AdminWorkspaceSettings" data-dojo-props="title:\'General\'"></div>' + 
      '      <div data-dojo-type="hotplate/bd/AdminLogs" data-dojo-attach-point="logs" data-dojo-props="title: \'Logs\'"></div>' +
      '    </div>' +
      '  </div>' +
      '</div>',
  });


  declare('hotplate/bd/AdminLogs', [ContentPane, _TemplatedMixin, _WidgetsInTemplateMixin ], {

    widgetsInTemplate: true,
    _shownBefore: false,

    templateString: '' +
      '<div>' +
      '  <div data-dojo-type="hotplate.hotDojoWidgets.AlertBar" data-dojo-attach-point="alertBar"></div>' +
      '  <div data-dojo-attach-point="gridNode"></div>' + 
      '</div>',

    postCreate: function(){
      this.inherited(arguments);
      var that = this;
    }, // postCreate


    onShow: function(){
      this.inherited(arguments);

      if( !this._shownBefore ){
        this._shownBefore = true;
        this.grid.set('store', stores('logs', { workspaceIdCall: globals.workspaceId }) );
        this.grid.resize();
      }
    },


    startup: function(){

      this.inherited(arguments);

      var customGrid = declare( [OnDemandGrid, Keyboard, Selection, _OverlayMixin ]);    

      this.grid = new customGrid({
        columns: {
          loggedOn: "Logged On",
          data: "Data",
          errorName: 'Error name',
          logLevel: "Log level",
          message: "Message",
          _id: "ID",
        },

        // selectionMode: "extended",
        cellNavigation: true,
        // store: stores('logs', { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } ) ,
        //store: new Memory( { data: {} } ),
        query: {} , //  data: 'pp' },
        // query: { errorName: 'Refe', logLevel: 0 },
        sort: [
          { attribute: 'logLevel', descending: false },
          { attribute: 'data', descending: true },
        ],

      }, this.gridNode );

      var grid = this.grid;

      grid.on('dgrid-error', function(event){
        topic.publish( 'globalAlert', 'Dgrid error: ' + event.error.message, 5000 );
        console.log("ERROR!");
        // grid.set('overlayed', true);
        // grid.set('overlayClickable', true);
      });

      grid.onOverlayClick = function(event){
        grid.refresh();
        grid.set('overlayed', false );
      };

      grid.startup();

    },

      
  });


  declare('hotplate/bd/AdminWorkspaceSettings', [ EditingWidget ], {

    templateString: '' +
      '<div>' +
      '  <form data-dojo-type="dijit/form/Form" data-dojo-attach-point="formWidget" method="POST"> ' +
      '    <div data-dojo-type="hotplate.hotDojoWidgets.AlertBar" data-dojo-attach-point="alertBarWidget"></div>' +

      '    <input type="hidden" data-dojo-type="dijit/form/TextBox" name="_id" />' +

      '    <div class="box"><p class="boxTitle">Workspace information</p>' +

      '      <div class="inputField" style="display:inline-block; margin-right:30px">' +
      '        <label for="${id}_WorkspaceLongName">Workspace name</label>' +
      '        <input id="${id}_WorkspaceLongName" data-dojo-type="dijit/form/ValidationTextBox" style="width:10em;" maxlength="50" name="longName" data-dojo-props="required:true" />' + 
      '      </div>' +
      '      <div class="inputField" style="display:inline-block;">' +
      '        <label for="${id}_WorkspaceTag">Workspace\'s tag line</label>' +
      '        <input id="${id}_WorkspaceTag" data-dojo-type="dijit/form/ValidationTextBox" style="width:40em" maxlength="150" name="tag" data-dojo-props="required: true"/>' +
      '      </div>' +

      '    </div>' +
      '    <input class="formSubmit" type="submit" data-dojo-attach-point="buttonWidget" data-dojo-type="hotplate/hotDojoWidgets/BusyButton" label="Update" />' +
      '  </form>' +
      '</div>',
      
    storeName: 'workspaceConfig',
    storeFields: { workspaceIdCall: globals.workspaceId },
    recordId: globals.workspaceId,

  } );

 return AdminTabContainer;
});



