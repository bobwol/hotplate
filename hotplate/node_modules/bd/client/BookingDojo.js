define([
   "dojo/_base/declare",
   "dojo/when",
   "dojo/store/Observable",

   "dijit/_WidgetBase",
   "dijit/_TemplatedMixin",
   "dijit/_WidgetsInTemplateMixin",
   "dijit/Destroyable",

   "dijit/layout/BorderContainer",
   "dijit/layout/StackContainer",
   "dijit/layout/TabContainer",
   "dijit/layout/ContentPane",

   "hotplate/hotDojoAuth/LogoutButton",
   "hotplate/hotDojoHooks/_TemplatedHooksMixin",
   "hotplate/hotDojoStores/stores",

   "hotplate/bd/AccessConfig",
   "hotplate/bd/AdminConfig",
   "hotplate/bd/UserConfig",

   // "app/widgets/SearchPage",

   ], function(
     declare
     , when
     , Observable

     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin
     , Destroyable

     , BorderContainer
     , StackContainer
     , TabContainer
     , ContentPane

     , LogoutButton
     , _TemplatedHooksMixin
     , stores

     , AccessConfig
     , AdminConfig

 ){
    // Create the "login" pane, based on a normal ContentPane
    return declare( [_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, _TemplatedHooksMixin, Destroyable ], {

      workspaceName: vars.hotDojoAppContainer.workspaceName,

      widgetsInTemplate: true,

      templateString: '' +
        '<div>' +
        '  <div class="bookingDojo" data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="gutters:false, design: \'headline\'">' +
        '    <div class="appHeader" stylee="padding:0; margin:0;" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="gutters:false, region: \'top\'">' +
        '       <span>Booking Dojo</span> <span data-dojo-attach-point="userName"></span> <div class="logoutButton" data-dojo-type="hotplate/hotDojoAuth/LogoutButton" data-dojo-props="workspaceName: \'${workspaceName}\'"></div>' +
        '    </div>' +

        '    <div data-dojo-attach-point="mainTabContainer" data-dojo-type="dijit/layout/TabContainer" data-dojo-props="region: \'center\', tabPosition: \'left-h\'">' +
        '      <div data-dojo-attach-point="dashboard" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title:\'Dashboard\'"></div>' +
        '      <div data-dojo-attach-point="inbox" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title: \'Inbox\'"></div>' +
        '      <div data-dojo-attach-point="search" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title:\'Search\'"></div>' +
        '      <div data-dojo-attach-point="calendar" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title:\'Calendar\'"></div>' +
        '      <div data-dojo-attach-point="contacts" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title:\'Contacts\'"></div>' +
        '      <div data-dojo-attach-point="accessConfig" data-dojo-type="hotplate/bd/AccessConfig" data-dojo-props="title: \'Your Config\'"></div>' +
        '      <div data-dojo-attach-point="adminConfig" data-dojo-type="hotplate/bd/AdminConfig" data-dojo-props="title: \'Admin\'"></div>' +
        '      <div data-dojo-attach-point="userConfig" data-dojo-type="hotplate/bd/UserConfig" data-dojo-props="title: \'You\'"></div>' +

        '    </div>'+

        '  </div>' +
        '</div>',


        postCreate:function(){
          this.inherited(arguments);
          var that = this;

          // Get the user's full name
          userConfigStore = stores('userConfig', { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } );
          Q = userConfigStore;

          var r;
          when( r = userConfigStore.query({ _id: 'self' } ) ) .then(
            function(res){
              console.log("This is what came back");
              console.log(res[0]);
              // this.userName.innerHTML = vars['hotDojoAppContainer']['login'];
              that.userName.innerHTML = res[0].name;
              r.observe(function(item, removedIndex, insertedIndex){
                
                console.log("HEYYYYYYYYYYYYYYYY " + item + " with " + removedIndex + " and " + insertedIndex);
                console.log(item);
                when( userConfigStore.get('self')).then(function(r){
                  console.log("ARRIVATOOOOOOOO");
                  that.userName.innerHTML = r.name;
                });
              });


            }
          );

        },

   });

});

