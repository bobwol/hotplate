
define([
  "dojo/_base/declare",
  "dojo/topic",
  "dojo/when",
  "dojo/aspect",
  "hotplate/hotDojoStores/stores",
  "hotplate/hotMessages/messages",
  "hotplate/bd/AppStoreNotify", // NEEDS TO BE CALLED BEFORE THIS ONE

  "dojo/domReady!",
   ], function(
   declare
 , topic
 , when
 , aspect
 , stores
 , messages
 ){


  var r = {};
  var userConfigStore      = stores('userConfig',      { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } ),
      workspaceConfigStore = stores('workspaceConfig', { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } ),
      accessConfigStore    = stores('accessConfig',    { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } );

  userConfigStore.memCache.put( vars.bd.userConfig, { dontPublish: true }  );
  workspaceConfigStore.memCache.put( vars.bd.workspaceConfig, { dontPublish: true }  );
  accessConfigStore.memCache.put( vars.bd.accessConfig, { dontPublish: true }  );

  // Assign the config variables
  r.userConfig = vars.bd.userConfig;
  r.workspaceConfig = vars.bd.workspaceConfig;
  r.accessConfig = vars.bd.accessConfig;


  topic.subscribe('storeUpdate', function( from, message){
    if( message.storeName === 'userConfig' && message.objectId === userId ){
      r.userConfig = message.object;
      topic.publish('configChange/user', r.accessConfig );
    }
  });

  topic.subscribe('storeUpdate', function( from, message ){
    if( message.storeName === 'workspaceConfig' && message.objectId === workspaceId ){
      r.workspaceConfig = message.object;
      topic.publish('configChange/workspace', r.workspaceConfig );
    }
  });

  topic.subscribe('storeUpdate', function( from, message ){
    if( message.storeName === 'accessConfig' && message.objectId === userId ){
      r.accessConfig = message.object;
      topic.publish('configChange/access', r.workspaceConfig );
    }
  });


  /*
  aspect.after(userConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      topic.publish('configChange/user', item );
    }
  }, true);

  aspect.after(workspaceConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      r.workspaceConfig = workspaceConfigStore.memCache.get('self');
      topic.publish('configChange/workspace', item );
    }
  }, true);

  aspect.after(accessConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      r.accessConfig = accessConfigStore.memCache.get('self');
      topic.publish('configChange/access', item );
    }
  }, true);
  */

  return r;

});


