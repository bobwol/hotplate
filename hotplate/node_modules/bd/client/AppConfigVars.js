
define([
     "dojo/_base/declare",
     "dojo/topic",
     "dojo/aspect",
     "hotplate/hotDojoStores/stores",

     "dojo/domReady!",
   ], function(
   declare
   , topic
   , aspect
   , stores
 ){

  var r = {};
  var userConfigStore      = stores('userConfig',      { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } ),
      workspaceConfigStore = stores('workspaceConfig', { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } ),
      accessConfigStore    = stores('accessConfig',    { workspaceIdCall: vars['hotDojoAppContainer']['workspaceId'] } );

  userConfigStore.memCache.put( vars.bd.userConfig );
  workspaceConfigStore.memCache.put( vars.bd.workspaceConfig );
  accessConfigStore.memCache.put( vars.bd.accessConfig );

  r.userConfig = vars.bd.userConfig;
  r.workspaceConfig = vars.bd.workspaceConfig;
  r.accessConfig = vars.bd.accessConfig;

  aspect.after(userConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      r.userConfig = userConfigStore.memCache.get('self');
      topic.publish('configChange/user', item );
    }
  }, true);

  aspect.after(workspaceConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      r.workspaceConfig = workspaceConfigStore.memCache.get('self');
      topic.publish('configChange/workspace', item );
    }
  }, true);

  aspect.after(accessConfigStore.memCache, 'put', function(item){
    if( item._id === 'self'){
      r.accessConfig = accessConfigStore.memCache.get('self');
      topic.publish('configChange/access', item );
    }
  }, true);

  return r;

});


