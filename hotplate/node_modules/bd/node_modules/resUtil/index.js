
var 
  dummy
, hotplate =  require('hotplate')
, mongoose = require('mongoose')
;

app = hotplate.app;

exports.hotHooks = hooks = {}


exports.checkFindOneResponse = function( err, doc, next, cb ){
  var e = hotplate.getModule('hotError').errors;

  if(err ){
    next(new e.RuntimeError( err ) );
  } else {
    if( ! doc  ){
      next( new e.NotFoundError() );
    } else {
      cb();
    }
  }
}

exports.checkFindResponse = function( err, doc, next, cb ){
  var e = hotplate.getModule('hotError').errors;

  if(err ){
    next(new e.RuntimeError( err ) );
  } else {
    if( ! doc || doc.length == 0 ){
      next( new e.NotFoundError() );
    } else {
      cb();
    }
  }
}


exports.checkUpdateResponse = function( err, doc, prefix, errMessage, next, cb) {

  var e = hotplate.getModule('hotError').errors;

  if( err ){
    next( new e.RuntimeError( err ) );
  } else {
    if( ! doc ){
      next( new e.NotFoundError() );
    } else {
      cb();
    }
  }
}



exports.makeUpdateObject = function(prefix, data){

  // Make up update object
  var updateObject = {}
   for( var k in data ){
     updateObject[ prefix + k ] = data[k];
  }
  return { $set: updateObject } ;
}


function makeValidationErrorFromMongoose(err, prefix, message){

  var errors = [];
  var e = hotplate.getModule('hotError').errors; 

  for( var y in err.errors ){
    var yy = y.replace(prefix, '');
    errors.push( { field: yy, message:err.errors[y].type } );
  }
  return new e.ValidationError(message, errors) ;
}


