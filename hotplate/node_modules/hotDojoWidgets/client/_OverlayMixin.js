define([
   "dojo/_base/declare",
   "dojo/on",
   "dojo/dom",
   "dojo/dom-construct",
   "dojo/dom-attr",
   "dojo/dom-class",

   "dijit/Destroyable",

  ], function(
    declare
  , on
  , dom
  , domConstruct
  , domAttr
  , domClass

  , Destroyable

  ){

  var setOverlayClickableFunc = function(value){

    // Set the method. This "IF" is necessary in case this is being added
    // to a dgrid, which is NOT watchable and doesn't have _set...
    if(this._set) this._set('overlayClickable', !! value);
    else this.overlayClickable = value;

    // This will make the widget call this.overlayClick function
    // (other widget will probably on() themselves on it to retry
    // whatever failed and caused the overlay to appear in the first place
    domClass.toggle( this.overlayNode, 'overlayClickable', value );

  } 

  var setOverlayedFunc = function(value){

    // Set the method. This "IF" is necessary in case this is being added
    // to a dgrid, which is NOT watchable and doesn't have _set...
    if( this._set) this._set('overlayed', !!value);
    else this.overlayed = !!value;

    // Set the 'display' CSS value so that it becomes visible/invisible
    domAttr.set( this.overlayNode, { style: { display: value ? 'block' : 'none' } } );

  };

  return declare( Destroyable, {

    overlayed: false,
    overlayClickable: false,

    postCreate: function(){
      this.inherited(arguments);

      var that = this;

      // Create the overlay widget, place it as first in the widget
      var overlay = domConstruct.create('div', {
        className: 'overlay', 
        style: {
          'position': 'absolute',
          'top': 0,
          'bottom': 0,
          'left': 0,
          'right': 0,
          'z-index': 99,
          'display': 'none',
          'background': 'rgba(0,0,0,0.32)'
        },
      }, this.domNode, 'first' );
     
      // Set the overlayNode attribute of the widget
      this.overlayNode = overlay;

      this.own(

        on( this.overlayNode, 'click', function(e){
          if( that.overlayClickable && typeof( that.onOverlayClick ) === 'function' ) {
            that.onOverlayClick(e); 
          }
        })

      );

    },


    // This is so that this mixin is compatible with _WidgetBase and with dgrid
    _setOverlayed: setOverlayedFunc,
    _setOverlayedAttr: setOverlayedFunc,


    // Set the widget's overlay as "clickable'" or not. If it's not, the widget's
    // onOverlayClick won't get called when the overlay is clicked
    _setOverlayClickableAttr: setOverlayClickableFunc,
    _setOverlayClickable: setOverlayClickableFunc,

    onOverlayClick: function(e){ },

  });




});
