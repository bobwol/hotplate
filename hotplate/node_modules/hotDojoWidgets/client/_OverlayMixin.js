define([
   "dojo/_base/declare",
   "dojo/on",
   "dojo/dom",
   "dojo/dom-construct",
   "dojo/dom-attr",
   "dojo/dom-class",

  ], function(
    declare
  , on
  , dom
  , domConstruct
  , domAttr
  , domClass
  ){
  return declare( null, {

    overlayed: false,
    overlayClickable: false,

    postCreate: function(){
      this.inherited(arguments);

      var that = this;

      // Create the overlay widget, place it as first in the widget
      var overlay = domConstruct.create('div', {
        className: 'overlay', 
        style: {
          'position': 'absolute',
          'top': 0,
          'bottom': 0,
          'left': 0,
          'right': 0,
          'z-index': 99,
          'display': 'none',
          'background': 'rgba(0,0,0,0.32)'
        } 
      } );
      domConstruct.place(overlay, this.domNode, 'first');
     
      // Set the overlayNode attribute of the widget
      this.overlayNode = overlay;

      // Wire the click of the mouse to the object's "onOverlayClick"
      on( this.overlayNode, 'click', function(e){
        if( that.overlayClickable && typeof( that.onOverlayClick ) === 'function' ) {
          that.onOverlayClick(e); 
        }
      });
    },


    // Set the widget as "overlayed" or not
    _setOverlayedAttr: function( value ){
      this._set('overlayed', !! value);
      if( value ){
        domAttr.set( this.overlayNode, { style: { display: 'block'} } );
      } else {
        domAttr.set( this.overlayNode, { style: { display: 'none'} } );
      }
    },
    _getOverlayedAttr: function(){
      return this.overlayVisible;
    },
   
 
    // Set the widget's overlay as "clickable'" or not. If it's not, the widget's
    // onOverlayClick won't get called when the overlay is clicked
    _setOverlayClickableAttr: function(value){
      this._set('overlayClickable', !! value);
      if( value ){
        domClass.add( this.overlayNode, 'overlayClickable' );
      } else {
        domClass.remove( this.overlayNode, 'overlayClickable' );
      }
    },
    _getOverlayClickableAttr: function(){
      return this.overlayClickable;
    }

  });
});
